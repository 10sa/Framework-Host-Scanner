<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 14.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="14.0">
 <Targets>
  <Target Name="C:\Users\User\Documents\GitHub\ScannerFramework\Framework\bin\Debug\Framework.dll">
   <Modules>
    <Module Name="framework.dll">
     <Namespaces>
      <Namespace Name="Framework">
       <Types>
        <Type Name="WebBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#MakeUrl(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2016-07-06 14:49:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\User\Documents\GitHub\ScannerFramework\Framework" File="WebBase.cs" Line="154">'WebBase.MakeUrl(string)'은(는) catch한 예외를 다시 throw하고 인수로 명시적으로 지정합니다. 예외가 처음 발생된 스택 위치를 유지하려면 인수 없이 'throw'를 대신 사용하십시오.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\User\Documents\GitHub\ScannerFramework\Framework" File="WebBase.cs" Line="159">'WebBase.MakeUrl(string)'은(는) catch한 예외를 다시 throw하고 인수로 명시적으로 지정합니다. 예외가 처음 발생된 스택 위치를 유지하려면 인수 없이 'throw'를 대신 사용하십시오.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Request(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2016-07-06 14:49:06Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\User\Documents\GitHub\ScannerFramework\Framework" File="WebBase.cs" Line="54">'WebBase.Request(bool)'은(는) catch한 예외를 다시 throw하고 인수로 명시적으로 지정합니다. 예외가 처음 발생된 스택 위치를 유지하려면 인수 없이 'throw'를 대신 사용하십시오.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200">
   <Name>스택 정보를 유지하도록 다시 throw하십시오.</Name>
   <Description>catch한 예외가 다시 발생하는 경우 IL의 다시 throw 명령을 사용하여 원래 스택 정보를 유지하십시오.</Description>
   <Resolution Name="Default">{0}은(는) catch한 예외를 다시 throw하고 인수로 명시적으로 지정합니다. 예외가 처음 발생된 스택 위치를 유지하려면 인수 없이 'throw'를 대신 사용하십시오.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182363.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">범주</String>
  <String Key="Certainty">확신도</String>
  <String Key="CollapseAll">모두 축소</String>
  <String Key="CheckId">확인 ID</String>
  <String Key="Error">오류</String>
  <String Key="Errors">개 오류</String>
  <String Key="ExpandAll">모두 확장</String>
  <String Key="Help">도움말</String>
  <String Key="Line">줄</String>
  <String Key="Messages">메시지</String>
  <String Key="LocationNotStoredInPdb">[Pdb에 위치가 저장되지 않음]</String>
  <String Key="Project">프로젝트</String>
  <String Key="Resolution">확인</String>
  <String Key="Rule">규칙</String>
  <String Key="RuleFile">규칙 파일</String>
  <String Key="RuleDescription">규칙 설명</String>
  <String Key="Source">소스</String>
  <String Key="Status">상태</String>
  <String Key="Target">대상</String>
  <String Key="Warning">경고</String>
  <String Key="Warnings">경고</String>
  <String Key="ReportTitle">코드 분석 보고서</String>
 </Localized>
</FxCopReport>
